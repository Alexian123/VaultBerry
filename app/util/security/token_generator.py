import secrets
from cryptography.fernet import Fernet

class TokenGenerator:

    @staticmethod
    def otp(length=9) -> str:
        """Generate a random numeric password.

        Args:
            length (int, optional): The length of the password. Defaults to 9.

        Returns:
            str: The generated password.
        """
        return ''.join([str(secrets.randbelow(10)) for _ in range(length)])

    @staticmethod
    def random_bytes(length=16) -> bytes:
        """Generates cryptographically secure random bytes

        Args:
            length (int, optional): The length of the byte string. Defaults to 16.

        Returns:
            bytes: The generated bytes.
        """
        return secrets.token_bytes(length)

    @staticmethod
    def random_string(length=32) -> str:
        """Generates a cryptographically secure random string

        Args:
            length (int, optional): The length of the string. Defaults to 32.

        Returns:
            str: The generated string.
        """
        return secrets.token_urlsafe(length)
    
    @staticmethod
    def fernet_key() -> bytes:
        """Generates a Fernet key.

        Returns:
            bytes: The Fernet key.
        """
        return Fernet.generate_key()